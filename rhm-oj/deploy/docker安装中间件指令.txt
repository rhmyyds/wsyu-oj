mysql配置
拉取镜像：
docker pull mysql:5.7
创建容器并启动：
docker run -d --name oj-mysql -p 3306:3306 -e "TZ=Asia/Shanghai" -e "MYSQL_ROOT_PASSWORD=123456" mysql:5.7

nacos配置
拉取镜像：
docker pull nacos/nacos-server:v2.2.3
创建容器并启动：这里里面的相关配置要改成自己的
docker run -d -p 8848:8848 -p 9848:9848 --name oj-nacos -e MODE=standalone -e JVM_XMS=256m -e JVM_XMX=256m -e SPRING_DATASOURCE_PLATFORM=mysql -e MYSQL_SERVICE_HOST=${mysql_ip} -e MYSQL_SERVICE_PORT=${mysql_port} -e MYSQL_SERVICE_DB_NAME=${nacos_db_name} -e MYSQL_SERVICE_USER=${mysql_user} -e MYSQL_SERVICE_PASSWORD=${mysql_password} nacos/nacos-server:v2.2.3

redis配置
拉取镜像：
docker pull redis
创建容器并启动：
docker run --name oj-redis -d -p 6379:6379 redis --requirepass "123456"

xxl-job配置
拉取镜像：
docker pull xuxueli/xxl-job-admin:2.4.0
创建容器并启动：
docker run -e PARAMS="--spring.datasource.url=jdbc:mysql://172.17.0.2:3306/xxl_job?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&serverTimezone=Asia/Shanghai --spring.datasource.username=root --spring.datasource.password=123456" -p 8080:8080 --name xxl-job-admin -d xuxueli/xxl-job-admin:2.4.0

elasticSearch配置
拉取镜像：
docker pull elasticsearch:8.5.3
创建网络用于Kibana连接elasticSearch：
docker network create oj-network
创建容器并启动：
docker run -d --name oj-es-dev -e "ES_JAVA_OPTS=-Xms256m -Xmx256m" -e "discovery.type=single-node" -v D:\ES:/usr/share/elasticsearch/plugins -e "xpack.security.enabled=false" --privileged --network oj-network -p 9200:9200 -p 9300:9300 elasticsearch:8.5.3
拉取Kibana：
docker pull kibana:8.5.3
创建容器并启动：
docker run -d --name oj-kibana-dev -e "ELASTICSEARCH_HOSTS=http://oj-es-dev:9200" -e "I18N_LOCALE=zh-CN" -p15601:5601 --net=oj-network kibana:8.5.3

rabbitmq配置
拉取镜像：
docker pull rabbitmq:3.8.30-management
创建容器并启动：
docker run -d --name oj-rabbit-dev -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=admin -p 15672:15672 -p 5672:5672 rabbitmq:3.8.30-management
在容器执行指令：
rabbitmq-plugins enable rabbitmq_management
